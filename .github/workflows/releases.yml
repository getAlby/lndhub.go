name: Push to Amazon ECR

on:
  push:
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: lndhub

permissions:
  contents: read

jobs:
  upload-docker-images:
    name: ECR push
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_NAME .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_NAME
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_NAME"
          # We also want to have a latest image, so we retag
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_NAME $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"